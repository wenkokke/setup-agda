name: 'Setup Agda'
author: 'Wen Kokke'
description: 'Set up a specific version of Agda.'
inputs:
  agda-version:
    default: 'latest'
    description: |
      The Agda version.

      Can be "latest" or a specific version number (e.g., 2.6.2.2).
    required: false
  agda-stdlib-version:
    default: 'none'
    description: |
      The Agda standard library version.

      Can be "none", "recommended", "latest", or a specific version number (e.g., 1.7.1).

      If set to "recommended", it will install the latest version of the Agda
      standard library compatible with the specified Agda version, as specified
      on [the Agda Wiki](https://wiki.portal.chalmers.se/agda/Libraries/StandardLibrary).

      If set to "latest" or a specific version number, it will install the
      latest or that specific version, regardless of compatibility with the
      specified Agda version.
    required: false
  agda-libraries:
    description: |
      A list of Agda libraries to install.

      Libraries must be specified by their Git URL and end in a version anchor,
      e.g.,

      ```yaml
      agda-libraries: |
        https://github.com/agda/agda-categories.git#v0.1.7.1
        https://github.com/agda/cubical.git#v0.3
      ```

      To setup the Agda standard library, use "agda-stdlib-version" instead, as
      that ensures that the standard library and Agda versions are compatible.

      This input requires that the library has a tagged release and that the
      repository contains a .agda-lib file.

      This input relies on the convention that the filename of the .agda-lib
      file is the name of the library, and will refuse to install any library
      whose .agda-lib file is simple named ".agda-lib".
    required: false
  agda-defaults:
    description: |
      A list of installed Agda libraries to add to defaults.

      Libraries must be specified by the name of their .agda-lib file, e.g.,

      ```yaml
      agda-defaults: |
        standard-library
        agda-categories
        cubical
      ```
    required: false
  agda-executables:
    description: |
      A list of executables to register with Agda.

      Executables must be specified by their name or path, e.g.,

      ```yaml
      agda-executables: |
        z3
        /bin/echo
      ```
    required: false

  force-build:
    description: |
      If specified, always build from source.
    required: false
  force-no-build:
    description: |
      If specified, never build from source.
    required: false
  force-cluster-counting:
    description: |
      If specified, build with cluster counting.
    required: false
  force-no-cluster-counting:
    description: |
      If specified, build without cluster counting.
    required: false
  force-optimise-heavily:
    description: |
      If specified, build with optimise heavily.
    required: false
  force-no-optimise-heavily:
    description: |
      If specified, build without optimise heavily.
    required: false

  ghc-version:
    default: 'recommended'
    description: |
      Version of GHC to use.

      Can be "recommended", "latest", or a specific version number (e.g., 9.4.2).

      If set to "recommended", it will get the latest version supported by
      `haskell/actions/setup` which the Agda version is tested-with.
      If `ghc-version-match-exact` is set to false, it will favour versions
      which are supported by `haskell/actions/setup`.

      If set "latest" or to a specific GHC version, this version will be used
      even if it is incompatible with the Agda version.
    required: false
  ghc-version-match-exact:
    description: |
      If specified, requires an exact match for the GHC version.

      By default, this action uses the pre-installed version of GHC if it is
      compatible with the requested Agda version (see `ghc-version-range`) in
      the major and minor version numbers, ignoring the patch version.
    required: false
  ghc-version-range:
    default: '*'
    description: |
      If specified, restricts the range of allowed GHC versions.

      By default, this action infers the set of compatible GHC versions from
      the `tested-with` field in Agda.cabalIf specified, this set of is then
      filtered by `ghc-version-range`.
    required: false

  pre-build-hook:
    default: ''
    description: |
      A shell script to be run before starting the build.
    required: false

  bdist-upload:
    description: |
      If specified, will upload a binary distribution for the specified Agda version.
    required: false
  bdist-name:
    default: 'agda-{{{agda-version}}}-{{{arch}}}-{{{platform}}}'
    description: |
      If specified, will be used as a name for the binary distribution package.

      The value is interpreted as a [mustache template](https://mustache.github.io/).
      The template may use `{{{agda-version}}}`, `{{{cabal-version}}}`,
      `{{{ghc-version}}}`, `{{{icu-version}}}`, and `{{{upx-version}}}`,
      which will be replaced by the concrete versions, if installed, and
      to `{{{arch}}}`, `{{{platform}}}`, and `{{{release}}}`, which will be
      replaced by the system architecture, operating system, and operating
      system release, as returned by
      [the corresponding NodeJS functions](https://nodejs.org/api/os.html).

      Only used when `bdist-upload` is specified.
    required: false
  bdist-license-report:
    description: |
      If specified, include a license report in the binary distribution.

      Only used when `bdist-upload` is specified.
    required: false
  bdist-compress-exe:
    description: |
      If specified, the executables are compressed with [UPX](https://upx.github.io).

      Beware that on MacOS and Windows the resulting executables are unsigned,
      and therefore will cause problems with security.
      There is a workaround for this on MacOS:

      ```sh
      # for each executable file in <package>/bin:
      chmod +x <bin>
      xattr -c <bin>

      # for each library file in <package>/lib:
      chmod +w <lib>
      xattr -c <lib>
      chmod -w <lib>
      ```

      Only used when `bdist-upload` is specified.
    required: false
  bdist-retention-days:
    default: '0'
    description: |
      Duration after which bdist will expire in days.
      0 means using default retention.

      Minimum 1 day.
      Maximum 90 days unless changed from the repository settings page.
    required: false

  # If haskell/actions/setup is called, following inputs are passed to it:
  cabal-version:
    default: 'latest'
    description: |
      Version of Cabal to use. If set to "latest", it will always get the latest stable version.
    required: false
  stack-version:
    default: 'latest'
    description: |
      Version of Stack to use. If set to "latest", it will always get the latest stable version.
    required: false
  enable-stack:
    description: |
      If specified, will setup Stack.
    required: false
  stack-no-global:
    description: |
      If specified, enable-stack must be set. Prevents installing GHC and Cabal globally.
    required: false
  stack-setup-ghc:
    description: |
      If specified, enable-stack must be set. Will run stack setup to install the specified GHC.
    required: false
  disable-matcher:
    description: |
      If specified, disables match messages from GHC as GitHub CI annotations.
    required: false

outputs:
  agda-version:
    description: 'The resolved Agda version.'
  agda-path:
    description: 'The path of the agda executable _directory_.'
  agda-data-path:
    description: 'The path of the agda data _directory_.'
  agda-exe:
    description: 'The path of the agda _executable_.'
  agda-mode-exe:
    description: 'The path of the agda-mode _executable_.'
  haskell-setup:
    description: 'Whether or not actions/haskell/setup was called.'

  # If it is called, the following outputs are set by actions/haskell/setup:
  ghc-path:
    description: 'The path of the ghc executable _directory_.'
  cabal-path:
    description: 'The path of the cabal executable _directory_.'
  stack-path:
    description: 'The path of the stack executable _directory_.'
  cabal-store:
    description: 'The path to the cabal store.'
  stack-root:
    description: 'The path to the stack root (equal to the STACK_ROOT environment variable if it is set; otherwise an OS-specific default).'
  ghc-exe:
    description: 'The path of the ghc _executable_.'
  cabal-exe:
    description: 'The path of the cabal _executable_.'
  stack-exe:
    description: 'The path of the stack _executable_.'

runs:
  using: 'node16'
  main: 'dist/index.js'

branding:
  icon: feather
  color: purple
